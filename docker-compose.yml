services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: twogether_postgres
    environment:
      POSTGRES_DB: twogether_dev
      POSTGRES_USER: twogether
      POSTGRES_PASSWORD: twogether_dev_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/migrations:/docker-entrypoint-initdb.d
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U twogether -d twogether_dev"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API
  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: twogether_backend
    environment:
      DATABASE_URL: postgresql://twogether:twogether_dev_password@postgres:5432/twogether_dev
      JWT_SECRET: twogether-dev-secret-key-change-in-production
      CORS_ORIGIN: http://localhost:5174
      PORT: 8080
      ENVIRONMENT: development
      # Supabase configuration - replace with your actual values
      SUPABASE_URL: https://gqhoebnveeaishflmkqv.supabase.co
      SUPABASE_ANON_KEY: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImdxaG9lYm52ZWVhaXNoZmxta3F2Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTE0Mjg5NTcsImV4cCI6MjA2NzAwNDk1N30.kw7lXqkbXiD9lKX6bSUxq_zWIPBDUB-xZ1PAy-AUG-E
      SUPABASE_SERVICE_ROLE_KEY: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImdxaG9lYm52ZWVhaXNoZmxta3F2Iiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1MTQyODk1NywiZXhwIjoyMDY3MDA0OTU3fQ.MVaYbfHe_wI2xMpmMnEuugM5MM37sgM8LU9diltU2q0
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    volumes:
      - ./uploads:/app/uploads

  # Frontend (Vite dev server)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: twogether_frontend
    environment:
      VITE_API_BASE_URL: http://localhost:8080/api
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local