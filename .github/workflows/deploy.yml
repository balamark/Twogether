name: Deploy to Google Cloud Platform

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  REGION: us-central1
  FRONTEND_BUCKET: ${{ secrets.GCP_FRONTEND_BUCKET }}
  BACKEND_SERVICE: twogether-backend

jobs:
  # Frontend Build and Deploy
  deploy-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Build frontend
        working-directory: ./frontend
        run: npm run build

      - name: Google Auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Setup Google Cloud CLI
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: Deploy frontend to Cloud Storage
        run: |
          gsutil -m rsync -d -r frontend/dist gs://${{ env.FRONTEND_BUCKET }}
          gsutil iam ch allUsers:objectViewer gs://${{ env.FRONTEND_BUCKET }}
          gsutil web set -m index.html -e 404.html gs://${{ env.FRONTEND_BUCKET }}

  # Backend Build and Deploy
  deploy-backend:
    runs-on: ubuntu-latest
    needs: deploy-frontend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Google Auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Setup Google Cloud CLI
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: Configure Docker for GCP
        run: gcloud auth configure-docker

      - name: Build and push Docker image
        run: |
          docker build -t gcr.io/${{ env.PROJECT_ID }}/twogether-backend:${{ github.sha }} ./backend
          docker push gcr.io/${{ env.PROJECT_ID }}/twogether-backend:${{ github.sha }}

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy ${{ env.BACKEND_SERVICE }} \
            --image gcr.io/${{ env.PROJECT_ID }}/twogether-backend:${{ github.sha }} \
            --platform managed \
            --region ${{ env.REGION }} \
            --allow-unauthenticated \
            --port 8080 \
            --memory 512Mi \
            --cpu 1 \
            --max-instances 10 \
            --set-env-vars "DATABASE_URL=${{ secrets.DATABASE_URL }}" \
            --set-env-vars "SUPABASE_URL=${{ secrets.SUPABASE_URL }}" \
            --set-env-vars "SUPABASE_ANON_KEY=${{ secrets.SUPABASE_ANON_KEY }}" \
            --set-env-vars "SUPABASE_SERVICE_KEY=${{ secrets.SUPABASE_SERVICE_KEY }}"

      - name: Update frontend API URL
        run: |
          # Get the Cloud Run service URL
          SERVICE_URL=$(gcloud run services describe ${{ env.BACKEND_SERVICE }} --region=${{ env.REGION }} --format="value(status.url)")
          
          # Update the frontend with the new API URL
          gsutil cp gs://${{ env.FRONTEND_BUCKET }}/index.html /tmp/index.html
          sed -i "s|http://localhost:8080|$SERVICE_URL|g" /tmp/index.html
          gsutil cp /tmp/index.html gs://${{ env.FRONTEND_BUCKET }}/index.html

  # Health check
  health-check:
    runs-on: ubuntu-latest
    needs: [deploy-frontend, deploy-backend]
    steps:
      - name: Google Auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Setup Google Cloud CLI
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: Health check backend
        run: |
          SERVICE_URL=$(gcloud run services describe ${{ env.BACKEND_SERVICE }} --region=${{ env.REGION }} --format="value(status.url)")
          curl -f "$SERVICE_URL/api/health" || exit 1

      - name: Health check frontend
        run: |
          FRONTEND_URL="https://storage.googleapis.com/${{ env.FRONTEND_BUCKET }}/index.html"
          curl -f "$FRONTEND_URL" || exit 1 